trigger:
  branches:
    include:
      - main
      - releases/*

jobs:
  - job: "BuildAlertsFuncApp"
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: src/NBS.Appointments.Service.Monitoring/NBS.Appointments.Service.Monitoring.csproj
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: src/NBS.Appointments.Service.Monitoring/NBS.Appointments.Service.Monitoring.csproj
        arguments: '--output func_app_output --configuration Release'
    - task: ArchiveFiles@2
      displayName: 'Create zip'
      inputs:
        rootFolderOrFile: 'func_app_output/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '/func_app_package/alerts_function_app.zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      displayName: "Publish Alerts Function App"
      inputs:
          PathtoPublish: "func_app_package"
          ArtifactName: "drop_funcapp"
          publishLocation: "Container"
  - job: "BuildAppointmentService"
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: src/NBS.Appointments.Service/NBS.Appointments.Service.csproj
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: src/NBS.Appointments.Service/NBS.Appointments.Service.csproj
        arguments: '--output publish_output --configuration Release'
    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests'
      inputs:
        command: 'test'
        projects: |
          src/NBS.Appointments.Service.Unit.Tests/NBS.Appointments.Service.Unit.Tests.csproj
          src/NBS.Appointments.Service.Core.Unit.Tests/NBS.Appointments.Service.Core.Unit.Tests.csproj
    - task: ShellScript@2
      inputs:
        scriptPath: ./src/run-api-tests.sh
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: appointments-service
        dockerfile: src/Dockerfile
        containerRegistry: NbsRegistryServiceConnection
    - task: PublishBuildArtifacts@1
      displayName: "Publish Terraform"
      inputs:
          PathtoPublish: "terraform"
          ArtifactName: "drop_terraform"
          publishLocation: "Container"
